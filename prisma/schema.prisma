// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  name        String?
  departments Department[]
  church      Church       @relation(fields: [churchId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  churchId  String
}

model Department {
  id      String    @id @default(cuid())
  name    String    @unique
  faculty Faculty[]
  
  userId  String?

  User    User?     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Faculty {
  id           String @id @default(cuid())
  name         String
  departmentId String

  department Department @relation(fields: [departmentId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Church {
  id    String @id @default(cuid())
  name  String
  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Question {
  id           String @id @default(cuid())
  question     String
  responses  Response[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Response {
  id          String @id @default(cuid())
  response    String
  questionId  String
  departmentId String

  question    Question @relation(fields: [questionId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}